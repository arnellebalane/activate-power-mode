throttle = require "lodash.throttle"
{CompositeDisposable} = require 'atom'

module.exports = ActivatePowerMode =
  activatePowerModeView: null
  modalPanel: null
  subscriptions: null

  activate: (state) ->
    @subscriptions = new CompositeDisposable

    @subscriptions.add atom.commands.add "atom-workspace",
      "activate-power-mode:toggle": => @toggle()

    @throttledShake = throttle @shake.bind(this), 100, trailing: false
    @throttledSpawnParticles = throttle @spawnParticles.bind(this), 25, trailing: false
    @throttledPlayAudio = throttle @playAudio.bind(this), 25, trailing: false

    @editor = atom.workspace.getActiveTextEditor()
    @editorElement = atom.views.getView @editor
    @editorElement.classList.add "power-mode"

    @subscriptions.add @editor.getBuffer().onDidChange(@onChange.bind(this))
    @setupCanvas()

  setupCanvas: ->
    @canvas = document.createElement "canvas"
    @context = @canvas.getContext "2d"
    @canvas.classList.add "power-mode-canvas"
    @canvas.width = @editorElement.offsetWidth
    @canvas.height = @editorElement.offsetHeight
    @editorElement.parentNode.appendChild @canvas

  calculateCursorOffset: ->
    editorRect = @editorElement.getBoundingClientRect()
    scrollViewRect = @editorElement.shadowRoot.querySelector(".scroll-view").getBoundingClientRect()

    top: scrollViewRect.top - editorRect.top + @editor.getLineHeightInPixels() / 2
    left: scrollViewRect.left - editorRect.left

  onChange: (e) ->
    spawnParticles = true
    if e.newText
      spawnParticles = e.newText isnt "\n"
      range = e.newRange.end
    else
      range = e.newRange.start

    @throttledSpawnParticles(range) if spawnParticles
    @throttledPlayAudio() if spawnParticles
    @throttledShake()

  shake: ->
    intensity = 1 + 2 * Math.random()
    x = intensity * (if Math.random() > 0.5 then -1 else 1)
    y = intensity * (if Math.random() > 0.5 then -1 else 1)

    @editorElement.style.top = "#{y}px"
    @editorElement.style.left = "#{x}px"

    setTimeout =>
      @editorElement.style.top = ""
      @editorElement.style.left = ""
    , 75

  spawnParticles: (range) ->
    cursorOffset = @calculateCursorOffset()

    {left, top} = @editor.pixelPositionForScreenPosition range
    left += cursorOffset.left - @editor.getScrollLeft()
    top += cursorOffset.top - @editor.getScrollTop()

    color = @getColorAtPosition left, top
    numParticles = 5 + Math.round(Math.random() * 10)
    while numParticles--
      part =  @createParticle left, top, color
      @particles[@particlePointer] = part
      @particlePointer = (@particlePointer + 1) % 500

  playAudio: ->
    audio = new Audio('data:audio/mp3;base64,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tEH/+5Jk2AzT60fMm48a4inCKUFpgziRGQUoLuDLkL0J5EG3mOAsKRk8OwMzd3Jhsr57jEAw7MSPKamkzzvzFRhhkYWe+o28p6UvA9LLGKkxMw3CjyRxs0SCSNTSSPlLsuVPZam8NLRGR9u33T9xFsyf8qsedzHxrho+FW/LXE1ln/6wAMAAwAHnMBwijNMMDEbmALkmr0NUgz+H0d6GiSIdEbBHNA6IOJoMNlZ9q+8L1gI6hokuBqva51gcJh4HhjUMg6JhgCDwkRQABNPkwTA5OsYAACACqoXDXIiOBiJALELCc4ANNBvE+HSN05B1Jgfx+tZysKuO1QOeHOK3qp7Cba1hXxSeDevza2c/P3a3w+3aWLXW5Xtqws+DJq81sRvZW3kl1K8jUnhe2cQZiS3OLPFHo1STzpZRJjgEqxIAoMaFxzIMGS40s10o62Rnb0u9T3Y1MZSuWsFVEV4Ec1rpZnaPnruuP/bv8geY02iAAA3HazIIxMD+wxEaTSPlHgoCBEGDYQgAwWDjJ41MWBowQBF7gQDoAjEwGLYCSh84Nsid//uSZOcMlWxVR5PZMvAuYakpbeYmEcDnIFXXgADAjyROtoAAA+hAylIkPR81SLoWngBQBsGLK5QKpmXTKGMACjhZGI3IIXzdNRdLxdLrg2CAxQIAA3eGW0dlIs1JJhS4XAB8gpQLnw+dNbt3SRd2i4w1QIKDIBqsSmMnazq/Z24fIKAHAIJigxxiUBZA4P//X8SmLnHGKAFyDsFli5yJiyBcn////5EBZYuciYuQcwiAucc8iYzA5hEBmxz/////////8nxzBzCcQCAAAANNqYxwBjCEpMIAEzQyjFIJEIBgKZVC+yD7rxOrcWywMmFsbkITAvCpIMiiGDQCuIMlOLGkD1G4NgsCwiNr4X4iycRA8//EIBXC7FsCoIj//JBbH5OPB4Sf//j8jJx4SGD8nP///8kMMH555IYYTn/////nkhgDD4IAMPgh////4DAgAMVks4xS0qW0/zhCrMElKTyr/M/oIzeUp7H/AxDsDnTUUcDgNQBUAGxYKUlwNSeAQTA0CEDMDa2+A8UBlSgGPCAUBgYwap62+AUJDCQGFCBYsP/7kmTZAAbIhEgOcmAAhYwJAs4oABftoQo5ygAQlJAlGyIgAX4gAAanrb8BoiGDgMWKBQEIiBggocZU9bf5GBq4ZcpigRnDw5wpqnrap//J4iojIiqQeyOcXg2YZUiq2Up1rZSn/+F8RZw5wXyFai5QslEJhQQWCEciCoWBEdBq5a2Vr1a///gJAB6IatAMAgACQYAAAABhIDoVw94hvjmjm+GAvAigP4CgEb/KAiUN/4pQEsJMQU1FMy45NyAoYmV0YSlVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVMQU1FMy45NyAoYmV0YSlVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVX/+5Jkdo/wAABpBwAACAAADSDgAAEAAAGk
    audio.play()


  getColorAtPosition: (left, top) ->
    offset = @editorElement.getBoundingClientRect()
    el = atom.views.getView(@editor).shadowRoot.elementFromPoint(
      left + offset.left
      top + offset.top
    )

    if el
      getComputedStyle(el).color
    else
      "rgb(255, 255, 255)"

  createParticle: (x, y, color) ->
    x: x
    y: y
    alpha: 1
    color: color
    velocity:
      x: -1 + Math.random() * 2
      y: -3.5 + Math.random() * 2

  drawParticles: ->
    requestAnimationFrame @drawParticles.bind(this)
    @context.clearRect 0, 0, @canvas.width, @canvas.height

    for particle in @particles
      continue if particle.alpha <= 0.1

      particle.velocity.y += 0.075
      particle.x += particle.velocity.x
      particle.y += particle.velocity.y
      particle.alpha *= 0.96

      @context.fillStyle = "rgba(#{particle.color[4...-1]}, #{particle.alpha})"
      @context.fillRect(
        Math.round(particle.x - 1.5)
        Math.round(particle.y - 1.5)
        3, 3
      )

  toggle: ->
    console.log 'ActivatePowerMode was toggled!'
    @particlePointer = 0
    @particles = []
    requestAnimationFrame @drawParticles.bind(this)
